name: Deploy to GitHub Pages

on:
  # Trigger deployment on push to main branch
  push:
    branches: [ main ]
  
  # Allow manual triggering from Actions tab
  workflow_dispatch:

# Set permissions for GitHub token
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # Fetch full history for better Git operations
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          # Use npm cache for faster builds
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install dependencies
        run: |
          # Clean install for consistent builds
          npm ci --prefer-offline --no-audit --fund=false
        env:
          # Prevent npm from sending analytics
          NPM_CONFIG_ANALYTICS: false
          # Reduce npm log level for cleaner output
          NPM_CONFIG_LOGLEVEL: error

      - name: Prepare Nuxt
        run: |
          # Prepare Nuxt (generates types, auto-imports, etc.)
          npm run postinstall
        env:
          NODE_ENV: production

      - name: Build application
        run: |
          # Generate static site for GitHub Pages
          npm run generate
        env:
          # Set environment variables for build
          NODE_ENV: production
          # Nuxt 4 specific optimizations
          NUXT_TELEMETRY_DISABLED: 1
          # Prevent memory issues during build
          NODE_OPTIONS: "--max_old_space_size=4096"
          # Force correct site URL for custom domain
          NUXT_SITE_URL: 'https://abdulbarry.me'
          NUXT_PUBLIC_SITE_URL: 'https://abdulbarry.me'
          # Supabase configuration (for newsletter functionality)
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          # Formspree configuration (for contact form)
          NUXT_FORMSPREE_ENDPOINT: ${{ secrets.FORMSPREE_ENDPOINT }}
          NUXT_PUBLIC_SITE_URL: 'https://abdulbarry.me'

      - name: Verify build output
        run: |
          # Check if build output exists
          if [ ! -d ".output/public" ]; then
            echo "❌ Build output directory not found"
            exit 1
          fi
          
          # Check for critical files
          if [ ! -f ".output/public/index.html" ]; then
            echo "❌ index.html not found in build output"
            exit 1
          fi
          
          echo "✅ Build verification completed"
          echo "Build output size:"
          du -sh .output/public

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.output/public'

  # Deploy job
  deploy:
    # Add a dependency to the build job
    needs: build
    
    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    runs-on: ubuntu-latest
    
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Optional: Lighthouse CI job for performance monitoring
  lighthouse:
    needs: deploy
    runs-on: ubuntu-latest
    if: github.event_name == 'push' # Only run on push events
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Wait for deployment
        run: |
          echo "Waiting 30 seconds for deployment to be ready..."
          sleep 30

      - name: Run Lighthouse CI
        uses: treosh/lighthouse-ci-action@v11
        with:
          urls: |
            https://abdulbarry.me/
            https://abdulbarry.me/projects
            https://abdulbarry.me/blog
            https://abdulbarry.me/contact
          uploadArtifacts: true
          temporaryPublicStorage: true
        continue-on-error: true # Don't fail the workflow if Lighthouse fails
